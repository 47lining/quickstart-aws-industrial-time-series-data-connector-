{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Deploy OSIsoft PI System to AWS Connector Quick Start into new VPC. **WARNING** You will be billed for the AWS resources used if you create a stack from this template.",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "AWS Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix",
                        "QSDeploymentSuffix"
                    ]
                },
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "RemoteAccessCIDR",
                        "VPCDefinition",
                        "AvailabilityZones",
                        "KeyName"
                    ]
                },
                {
                    "Label": {
                        "default": "Licensed 3rd-party Software Installers Configuration"
                    },
                    "Parameters": [
                        "LicensedSoftwareS3BucketName",
                        "LicensedSoftwareS3KeyPrefix",
                        "ConnectorAgentAssetsS3BucketName",
                        "ConnectorAgentAssetsS3KeyPrefix"
                    ]
                },
                {
                    "Label": {
                        "default": "OSIsoft Authentication Configuration"
                    },
                    "Parameters": [
                        "AuthType"
                    ]
                },
                {
                    "Label": {
                        "default": "Authentication Configuration for WIS"
                    },
                    "Parameters": [
                        "WISFQDN",
                        "WISUser",
                        "WISPassword",
                        "DomainControllerServerIP"
                    ]
                },
                {
                    "Label": {
                        "default": "Authentication Configuration for Explicit User and Password"
                    },
                    "Parameters": [
                        "PIUser",
                        "PIPassword",
                        "AFDomainName",
                        "AFUser",
                        "AFPassword"
                    ]
                },
                {
                    "Label": {
                        "default": "PI Data Archive Server Configuration"
                    },
                    "Parameters": [
                        "PIServerIP",
                        "PIPort"
                    ]
                },
                {
                    "Label": {
                        "default": "Asset Framework Server Configuration"
                    },
                    "Parameters": [
                        "AFServerIP",
                        "AFPort",
                        "AfStructureDatabase"
                    ]
                },
                {
                    "Label": {
                        "default": "Connector Agent Configuration"
                    },
                    "Parameters": [
                        "ConnectorInstanceType",
                        "LogGroupNamePrefix",
                        "MetricNamespaceNamePrefix"
                    ]
                },
                {
                    "Label": {
                        "default": "Management Console Configuration"
                    },
                    "Parameters": [
                        "InstanceType",
                        "ApplicationUser",
                        "ApplicationPassword"
                    ]
                },
                {
                    "Label": {
                        "default": "Connector Supporting Infrastructure Configuration"
                    },
                    "Parameters": [
                        "WorkerInstanceType",
                        "ReadCapacity",
                        "WriteCapacity",
                        "KinesisStreamsShardsCount"
                    ]
                },
                {
                    "Label": {
                        "default": "Elasticsearch Configuration"
                    },
                    "Parameters": [
                        "MaxIndexAge",
                        "ElasticsearchNodeCount",
                        "ElasticsearchNodeType"
                    ]
                },
                {
                    "Label": {
                        "default": "S3 Lifecycle Management"
                    },
                    "Parameters": [
                        "EnableS3LifecycleRules",
                        "IATransitionPeriodInDays",
                        "GlacierTransitionPeriodInDays"
                    ]
                }
            ],
            "ParameterLabels": {
                "LicensedSoftwareS3BucketName": {
                    "default": "Licensed Software S3 Bucket Name"
                },
                "LicensedSoftwareS3KeyPrefix": {
                    "default": "Licensed Software S3 Key Prefix"
                },
                "ConnectorAgentAssetsS3BucketName": {
                    "default": "Connector Agent Assets S3 Bucket Name"
                },
                "ConnectorAgentAssetsS3KeyPrefix": {
                    "default": "Connector Agent Assets S3 Key Prefix"
                },
                "QSDeploymentSuffix": {
                    "default": "Quick Start Deployment Suffix"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 Bucket Name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 Key Prefix"
                },
                "RemoteAccessCIDR": {
                    "default": "Remote Access CIDR"
                },
                "VPCDefinition": {
                    "default": "VPC Definition"
                },
                "AvailabilityZones": {
                    "default": "Availability Zones"
                },
                "KeyName": {
                    "default": "Key Name"
                },
                "AFDomainName": {
                    "default": "Asset Framework Domain Name"
                },
                "AFPassword": {
                    "default": "Asset Framework Password"
                },
                "AFPort": {
                    "default": "Asset Framework Port"
                },
                "AfStructureDatabase": {
                    "default": "Asset Framework Structure Database"
                },
                "AFUser": {
                    "default": "Asset Framework User"
                },
                "AFServerIP": {
                    "default": "Asset Framework Server IP"
                },
                "PIServerIP": {
                    "default": "PI Server IP"
                },
                "PIUser": {
                    "default": "PI User"
                },
                "PIPassword": {
                    "default": "PI Password"
                },
                "PIPort": {
                    "default": "PI Port"
                },
                "ConnectorInstanceType": {
                    "default": "Connector Agent Instance Type"
                },
                "LogGroupNamePrefix": {
                    "default": "Log Group Name Prefix"
                },
                "MetricNamespaceNamePrefix": {
                    "default": "Metric Namespace Name Prefix"
                },
                "WorkerInstanceType": {
                    "default": "Communication Worker Instance Type"
                },
                "InstanceType": {
                    "default": "Management Console Instance Type"
                },
                "ApplicationUser": {
                    "default": "Management Console User Name"
                },
                "ApplicationPassword": {
                    "default": "Management Console Password"
                },
                "MaxIndexAge": {
                    "default": "Days to Live"
                },
                "ElasticsearchNodeCount": {
                    "default": "Elasticsearch Node Count"
                },
                "ElasticsearchNodeType": {
                    "default": "Elasticsearch Node Type"
                },
                "ReadCapacity": {
                    "default": "DynamoDB Read Capacity"
                },
                "WriteCapacity": {
                    "default": "DynamoDB Write Capacity"
                },
                "EnableS3LifecycleRules": {
                    "default": "Enable S3 Lifecycle"
                },
                "IATransitionPeriodInDays": {
                    "default": "IA Transition Period"
                },
                "GlacierTransitionPeriodInDays": {
                    "default": "Glacier Transition Period"
                },
                "AuthType": {
                    "default": "Authentication Method"
                },
                "WISFQDN": {
                    "default": "WIS Domain Name"
                },
                "WISUser": {
                    "default": "WIS Domain User Name"
                },
                "WISPassword": {
                    "default": "WIS Domain User Password"
                },
                "DomainControllerServerIP": {
                    "default": "Domain Controller Server IP"
                },
                "KinesisStreamsShardsCount": {
                    "default": "Kinesis Streams Shards Count"
                }
            }
        }
    },
    "Parameters": {
        "QSS3BucketName": {
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Description": "S3 bucket where the Quick Start templates and scripts are installed. Use this parameter to specify the S3 bucket name you've created for your copy of Quick Start assets, if you decide to customize or extend the Quick Start for your own use. The bucket name can include numbers, lowercase letters, uppercase letters, and hyphens, but should not start or end with a hyphen.",
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "Type": "String",
            "Default": "quickstart-reference"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-][0-9a-zA-Z-/]*/$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Description": "The S3 key name prefix used to simulate a folder for your copy of Quick Start assets, if you decide to customize or extend the Quick Start for your own use. This prefix can include numbers, lowercase letters, uppercase letters, hyphens, and forward slashes.",
            "Type": "String",
            "Default": "osisoft/latest/"
        },
        "RemoteAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Description": "The CIDR IP range that is permitted to access the OSIsoft PI System to AWS Connector software. We recommend that you set this value to a trusted IP range. For example, you might want to grant only your corporate network access to the software. You can use http://checkip.amazonaws.com/ to check your IP address. This parameter must be in the form x.x.x.x/x (e.g., 96.127.8.12/32, YOUR_IP/32).",
            "Type": "String"
        },
        "KeyName": {
            "Description": "Public/private key pair, which allows you to connect securely to your instance after it launches. When you created an AWS account, this is the key pair you created in your preferred region.",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "Can contain only ASCII characters."
        },
        "VPCDefinition": {
            "Default": "QuickstartDefault",
            "Description": "VPC definition name from the Mappings section of the template. Each definition specifies a VPC configuration, including the number of Availability Zones to be used for the deployment and the CIDR blocks for the VPC, public subnets, and private subnets. You can support multiple VPC configurations by extending the map with additional definitions and choosing the appropriate name. If you don't want to change the VPC configuration, keep the default setting.",
            "Type": "String"
        },
        "AvailabilityZones": {
            "Description": "The list of Availability Zones to use for the subnets in the VPC. The Quick Start uses two Availability Zones from your list and preserves the logical order you specify.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "QSDeploymentSuffix": {
            "Type": "String",
            "Default": "qs",
            "ConstraintDescription": "Deployment suffix can include numbers, lowercase letters and should have the maximum length of 7 characters.",
            "Description": "You can deploy this Quick Start multiple times in the same AWS Region if you provide a different suffix with each launch. This suffix is added to resource names to make them unique for each deployment. Use this parameter to support the deployment of production and test environments in the same AWS Region and in the same AWS account. The suffix is a 1-7 character string that contains numbers and lowercase letters.",
            "AllowedPattern": "[a-z0-9]+",
            "MinLength": 1,
            "MaxLength": 7
        },
        "LicensedSoftwareS3BucketName": {
            "ConstraintDescription": "S3 bucket bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Description": "S3 bucket where the Microsoft and OSIsoft licensed software (.NET Framework, PI AF Client SDK) are installed. The bucket name can include numbers, lowercase letters, uppercase letters, and hyphens, but should not start or end with a hyphen.",
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "Type": "String"
        },
        "LicensedSoftwareS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-][0-9a-zA-Z-/]*/$",
            "ConstraintDescription": "The S3 key name prefix for required licensed software. This prefix can include numbers, lowercase letters, uppercase letters, hyphens, and forward slashes.",
            "Description": "The S3 key name prefix for required licensed software. This prefix can include numbers, lowercase letters, uppercase letters, hyphens, and forward slashes.",
            "Type": "String"
        },
        "ConnectorAgentAssetsS3BucketName": {
            "ConstraintDescription": "S3 bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Description": "S3 bucket where Connector Agent sources are installed. The bucket name can include numbers, lowercase letters, uppercase letters, and hyphens, but should not start or end with a hyphen.",
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "Type": "String",
            "Default": "aws-quickstart-datasets"
        },
        "ConnectorAgentAssetsS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-][0-9a-zA-Z-/]*/$",
            "Description": "The S3 key name prefix to where Connector Agent sources are installed. This prefix can include numbers, lowercase letters, uppercase letters, hyphens, and forward slashes.",
            "ConstraintDescription": "The S3 key name prefix to where Connector Agent sources are installed. This prefix can include numbers, lowercase letters, uppercase letters, hyphens, and forward slashes.",
            "Type": "String",
            "Default": "osisoft/agent/v1/"
        },
        "AuthType": {
            "Type": "String",
            "AllowedValues": ["WIS", "Explicit user and password"],
            "Default": "WIS",
            "Description": "The authentication method to use between the Connector and the OSIsoft PI System. Two authentication methods are supported: Windows Integrated Security (WIS) and explicit user and password authentication. If you are using Active Directory with your OSIsoft PI System and already have VPN established, you can use the WIS authentication method. If you don't use WIS, you can specify Explicit user and password. Depending on your choice, enter values for the parameters in one of the next two categories."
        },
        "WISFQDN": {
            "Description": "Fully qualified domain name (FQDN) of the forest domain for the OSIsoft system e.g. \"osisoft-example.com\". Required only if Authentication Method is set to \"WIS\".",
            "Type": "String",
            "Default": ""
        },
        "WISUser": {
            "Type": "String",
            "Default": "",
            "Description": "The user name (in Active Directory in your Windows network) for the user who has privileges to access PI Data Archive and AF Server. Required only if Authentication Method is set to \"WIS\"."
        },
        "WISPassword": {
            "Type": "String",
            "NoEcho": "true",
            "Default": "",
            "Description": "The password (in Active Directory in your Windows network) for the user who has privileges to access PI Data Archive and AF Server. Required only if Authentication Method is set to \"WIS\"."
        },
        "DomainControllerServerIP": {
            "Description": "Host (IP) of the AD Domain Controller server. Required only if Authentication Method is set to \"WIS\".",
            "AllowedPattern": "^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))?$",
            "Type": "String"
        },
        "PIUser": {
            "Type": "String",
            "Description": "Name of the PI Data Archive user. Required only if Authentication Method is set to \"Explicit user and password\"."
        },
        "PIPassword": {
            "Description": "Password for the PI Data Archive user. Required only if Authentication Method is set to \"Explicit user and password\".",
            "Type": "String",
            "NoEcho": "true"
        },
        "AFDomainName": {
            "Description": "Domain name of the user who runs AF Server. This parameter is required only if you set Authentication Method to Explicit user and password and you adopted AF Server in your OSIsoft system. This Quick Start can independently connect to PI Data Archive and AF Server.",
            "Type": "String"
        },
        "AFUser": {
            "Description": "Name of the user who has privileges to access PI Asset Framework Server. This parameter is required only if you set Authentication Method to Explicit user and password and you adopted AF Server in your OSIsoft system. This Quick Start can independently connect to PI Data Archive and AF Server.",
            "Type": "String"
        },
        "AFPassword": {
            "Description": "Password of the user who has privileges to access AF Server. This parameter is required only if Authentication Method is set to Explicit user and password and you adopted AF Server in your OSIsoft system. This Quick Start can independently connect to PI Data Archive and AF Server.",
            "NoEcho": "true",
            "Type": "String"
        },
        "PIServerIP": {
            "Description": "Host (IP) of the PI Data Archive server.",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "ConstraintDescription": "PI Server IP must be a valid IP address.",
            "Type": "String"
        },
        "PIPort": {
            "Description": "Port on which PI Data Archive runs.",
            "Type": "Number",
            "ConstraintDescription": "PI Server port must be a valid number.",
            "Default": 5450
        },
        "AFServerIP": {
            "Description": "Host (IP) of the PI AF server. This parameter is required only if you adopted AF Server in your OSIsoft system. This Quick Start can independently connect to PI Data Archive and AF Server.",
            "AllowedPattern": "^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))?$",
            "Type": "String"
        },
        "AFPort": {
            "Description": "Port on which PI AF server runs. This parameter is required only if you adopted AF Server in your OSIsoft system. This Quick Start can independently connect to PI Data Archive and AF Server.",
            "Type": "Number",
            "Default": 5457
        },
        "AfStructureDatabase": {
            "Description": "Name of the AF database that Connector Agent will connect to; for example, NuGreen. This parameter is required only if you adopted AF Server in your OSIsoft system. This Quick Start can independently connect to PI Data Archive and AF Server.",
            "Type": "String"
        },
        "ConnectorInstanceType": {
            "Description": "EC2 instance type for the Connector Agent instance.",
            "Type": "String",
            "Default": "m4.xlarge",
            "AllowedValues": [
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "m5.large",
                "m5.xlarge",
                "m5.2xlarge",
                "m5.4xlarge",
                "m5.12xlarge",
                "c5.large",
                "c5.xlarge",
                "c5.2xlarge",
                "c5.4xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "LogGroupNamePrefix": {
            "Description": "Name of the Amazon CloudWatch log group for metric filters.",
            "Type": "String",
            "Default": "ConnectorLogGroup"
        },
        "MetricNamespaceNamePrefix": {
            "Description": "Namespace name for the metric filters.",
            "Type": "String",
            "Default": "ConnectorMetricNamespace"
        },
        "InstanceType": {
            "Description": "EC2 instance type for the Management Console.",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m5.large",
                "m5.xlarge",
                "m5.2xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "ApplicationUser": {
            "AllowedPattern": "^[\\x00-\\x7F]*$",
            "ConstraintDescription": "User name must contain 1 to 64 ASCII characters.",
            "Default": "ConsoleAdmin",
            "Description": "The user name for the Management Console, consisting of 1-64 ASCII characters.",
            "MaxLength": "64",
            "MinLength": "1",
            "Type": "String"
        },
        "ApplicationPassword": {
            "Description": "User password for the Management Console. The password must contain 8 to 64 printable ASCII characters, excluding: /, \", ', \\ and @, and must contain 1 uppercase letter, 1 lowercase letter, and 1 number.",
            "Type": "String",
            "NoEcho": "true",
            "AllowedPattern": "^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])[A-Za-z0-9!#$%&()*+,.:;<=>?\\[\\]^_`{|}~-]*$",
            "MinLength": 8,
            "MaxLength": 64
        },
        "WorkerInstanceType": {
            "Description": "EC2 instance type for the Communication Worker host. The Communication Worker processes messages coming from Connector Agent.",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m5.large",
                "m5.xlarge",
                "m5.2xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "ReadCapacity": {
            "Description": "Read capacity of each DynamoDB table (1-10000). For more information, see the Amazon DynamoDB documentation.",
            "Type": "Number",
            "Default": 1,
            "MinValue": 1,
            "MaxValue": 10000,
            "ConstraintDescription": "Must be between 1 and 10000"
        },
        "WriteCapacity": {
            "Description": "Write capacity of each DynamoDB table (1-10000). For more information, see the Amazon DynamoDB documentation.",
            "Type": "Number",
            "Default": 1,
            "MinValue": 1,
            "MaxValue": 10000,
            "ConstraintDescription": "Must be between 1 and 10000"
        },
        "KinesisStreamsShardsCount": {
            "Type": "Number",
            "Description": "The number of Kinesis Data Streams shards to provision for the PI Data stream. For guidance, see the Amazon Kinesis Data Streams documentation.",
            "Default": 2,
            "MinValue": 1
        },
        "MaxIndexAge": {
            "Type": "Number",
            "Default": 7,
            "Description": "The number of days after which managed feeds are removed from Amazon ES. Data is permanently stored in Amazon S3."
        },
        "ElasticsearchNodeCount": {
            "Description": "The number of nodes in the Elasticsearch cluster.",
            "Type": "Number",
            "Default": "1"
        },
        "ElasticsearchNodeType": {
            "Description": "The node type to be provisioned for the Elasticsearch cluster.",
            "Type": "String",
            "Default": "t2.small.elasticsearch",
            "AllowedValues": [
                "t2.small.elasticsearch",
                "m4.large.elasticsearch",
                "m4.xlarge.elasticsearch",
                "c4.large.elasticsearch",
                "c4.xlarge.elasticsearch",
                "r4.large.elasticsearch",
                "r4.xlarge.elasticsearch"
            ],
            "ConstraintDescription": "must be a valid Elasticsearch node type."
        },
        "EnableS3LifecycleRules": {
            "Description": "Set to no if you want to disable Amazon S3 lifecycle rules. For more information, see the Amazon S3 documentation.",
            "Type": "String",
            "AllowedValues": ["yes", "no"],
            "Default": "yes"
        },
        "IATransitionPeriodInDays": {
            "Description": "Number of days after which data is transitioned to infrequent access (IA) in Amazon S3. For more information, see the Amazon S3 documentation.",
            "Type": "Number",
            "Default": 90
        },
        "GlacierTransitionPeriodInDays": {
            "Description": "Number of days after which data is transitioned to Amazon Glacier.",
            "Type": "Number",
            "Default": 365
        }
    },
    "Mappings": {
        "VPCDefinitions": {
            "QuickstartDefault": {
                "VPCCIDR": "10.0.0.0/16",
                "PublicSubnet1CIDR": "10.0.128.0/20",
                "PrivateSubnet1CIDR": "10.0.0.0/19",
                "PublicSubnet2CIDR": "10.0.144.0/20",
                "PrivateSubnet2CIDR": "10.0.32.0/19",
                "NumberOfAZs": "2"
            }
        }
    },
    "Resources": {
        "Pi2AwsFoundationStack": {
            "DependsOn": [
                "VPCStack"
            ],
            "Properties": {
                "Parameters": {
                    "ConnectorAgentAssetsS3BucketName": {
                        "Ref": "ConnectorAgentAssetsS3BucketName"
                    },
                    "ConnectorAgentAssetsS3KeyPrefix": {
                        "Ref": "ConnectorAgentAssetsS3KeyPrefix"
                    },
                    "QSDeploymentSuffix": {
                        "Ref": "QSDeploymentSuffix"
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "RemoteAccessCIDR": {
                        "Ref": "RemoteAccessCIDR"
                    },
                    "InstanceType": {
                        "Ref": "InstanceType"
                    },
                    "ConnectorInstanceType": {
                        "Ref": "ConnectorInstanceType"
                    },
                    "WorkerInstanceType": {
                        "Ref": "WorkerInstanceType"
                    },
                    "KeyName": {
                        "Ref": "KeyName"
                    },
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "ApplicationUser": {
                        "Ref": "ApplicationUser"
                    },
                    "ApplicationPassword": {
                        "Ref": "ApplicationPassword"
                    },
                    "ReadCapacity": {
                        "Ref": "ReadCapacity"
                    },
                    "WriteCapacity": {
                        "Ref": "WriteCapacity"
                    },
                    "ElasticsearchNodeType": {
                        "Ref": "ElasticsearchNodeType"
                    },
                    "ElasticsearchNodeCount": {
                        "Ref": "ElasticsearchNodeCount"
                    },
                    "AfStructureDatabase": {
                        "Ref": "AfStructureDatabase"
                    },
                    "LogGroupNamePrefix": {
                        "Ref": "LogGroupNamePrefix"
                    },
                    "MetricNamespaceNamePrefix": {
                        "Ref": "MetricNamespaceNamePrefix"
                    },
                    "PrivateSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet1AID"
                        ]
                    },
                    "PrivateSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet2AID"
                        ]
                    },
                    "PublicSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet1ID"
                        ]
                    },
                    "PublicSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet2ID"
                        ]
                    },
                    "VPCCIDR": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCCIDR"
                        ]
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "PIServerIP": {
                        "Ref": "PIServerIP"
                    },
                    "AFUser": {
                        "Ref": "AFUser"
                    },
                    "PIPort": {
                        "Ref": "PIPort"
                    },
                    "AFServerIP": {
                        "Ref": "AFServerIP"
                    },
                    "AFPort": {
                        "Ref": "AFPort"
                    },
                    "AFPassword": {
                        "Ref": "AFPassword"
                    },
                    "AFDomainName": {
                        "Ref": "AFDomainName"
                    },
                    "PIUser": {
                        "Ref": "PIUser"
                    },
                    "PIPassword": {
                        "Ref": "PIPassword"
                    },
                    "LicensedSoftwareS3KeyPrefix": {
                        "Ref": "LicensedSoftwareS3KeyPrefix"
                    },
                    "LicensedSoftwareS3BucketName": {
                        "Ref": "LicensedSoftwareS3BucketName"
                    },
                    "MaxIndexAge": {
                        "Ref": "MaxIndexAge"
                    },
                    "EnableS3LifecycleRules": {
                        "Ref": "EnableS3LifecycleRules"
                    },
                    "IATransitionPeriodInDays": {
                        "Ref": "IATransitionPeriodInDays"
                    },
                    "GlacierTransitionPeriodInDays": {
                        "Ref": "GlacierTransitionPeriodInDays"
                    },
                    "AuthType": {
                        "Ref": "AuthType"
                    },
                    "WISUser": {
                        "Ref": "WISUser"
                    },
                    "WISPassword": {
                        "Ref": "WISPassword"
                    },
                    "WISFQDN": {
                        "Ref": "WISFQDN"
                    },
                    "KinesisStreamsShardsCount": {
                        "Ref": "KinesisStreamsShardsCount"
                    },
                    "DomainControllerServerIP": {
                        "Ref": "DomainControllerServerIP"
                    }
                },
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/pi2aws.template"
                }
            },
            "Type": "AWS::CloudFormation::Stack"
        },
        "BastionStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-linux-bastion/templates/linux-bastion.template"
                },
                "Parameters": {
                    "KeyPairName": {
                        "Ref": "KeyName"
                    },
                    "PublicSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet1ID"
                        ]
                    },
                    "PublicSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet2ID"
                        ]
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Fn::Sub": [
                            "${Prefix}submodules/quickstart-linux-bastion/",
                            {
                                "Prefix": {
                                    "Ref": "QSS3KeyPrefix"
                                }
                            }
                        ]
                    },
                    "RemoteAccessCIDR": {
                        "Ref": "RemoteAccessCIDR"
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "EnableTCPForwarding": "true"
                }
            }
        },
        "VPCStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template"
                },
                "Parameters": {
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "KeyPairName": {
                        "Ref": "KeyName"
                    },
                    "NumberOfAZs": {
                        "Fn::FindInMap": [
                            "VPCDefinitions",
                            {
                                "Ref": "VPCDefinition"
                            },
                            "NumberOfAZs"
                        ]
                    },
                    "PrivateSubnet1ACIDR": {
                        "Fn::FindInMap": [
                            "VPCDefinitions",
                            {
                                "Ref": "VPCDefinition"
                            },
                            "PrivateSubnet1CIDR"
                        ]
                    },
                    "PrivateSubnet2ACIDR": {
                        "Fn::FindInMap": [
                            "VPCDefinitions",
                            {
                                "Ref": "VPCDefinition"
                            },
                            "PrivateSubnet2CIDR"
                        ]
                    },
                    "PublicSubnet1CIDR": {
                        "Fn::FindInMap": [
                            "VPCDefinitions",
                            {
                                "Ref": "VPCDefinition"
                            },
                            "PublicSubnet1CIDR"
                        ]
                    },
                    "PublicSubnet2CIDR": {
                        "Fn::FindInMap": [
                            "VPCDefinitions",
                            {
                                "Ref": "VPCDefinition"
                            },
                            "PublicSubnet2CIDR"
                        ]
                    },
                    "VPCCIDR": {
                        "Fn::FindInMap": [
                            "VPCDefinitions",
                            {
                                "Ref": "VPCDefinition"
                            },
                            "VPCCIDR"
                        ]
                    }
                }
            }
        }
    },
    "Outputs": {
        "ManagementConsoleURL": {
            "Value": {
                "Fn::GetAtt": [
                    "Pi2AwsFoundationStack",
                    "Outputs.ManagementConsoleURL"
                ]
            },
            "Description": "Management Console URL"
        },
        "ElasticsearchEndpoint": {
             "Value": {
                "Fn::GetAtt": [
                    "Pi2AwsFoundationStack",
                    "Outputs.ElasticsearchEndpoint"
                ]
            },
            "Description": "Elasticsearch domain endpoint"
        },
        "CuratedBucketName": {
            "Value": {
                "Fn::GetAtt": [
                    "Pi2AwsFoundationStack",
                    "Outputs.CuratedBucketName"
                ]
            },
            "Description": "Bucket name for Curated Datasets"
        },
        "PublishedBucketName": {
            "Value": {
                "Fn::GetAtt": [
                    "Pi2AwsFoundationStack",
                    "Outputs.PublishedBucketName"
                ]
            },
            "Description": "Bucket name for Published Data"
        },
        "SubmissionsBucketName": {
            "Value": {
                "Fn::GetAtt": [
                    "Pi2AwsFoundationStack",
                    "Outputs.SubmissionsBucketName"
                ]
            },
            "Description": "Bucket name for submissions"
        },
        "KinesisStreamName": {
            "Value": {
                "Fn::GetAtt": [
                    "Pi2AwsFoundationStack",
                    "Outputs.KinesisStreamName"
                ]
            },
            "Description": "Kinesis PI Points data stream name"
        },
        "BastionIP": {
            "Value": {
                 "Fn::GetAtt": [
                    "BastionStack",
                    "Outputs.EIP1"
                 ]
            },
            "Description": "Bastion IP"
        }
    }
}
