{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Deploy OSIsoft to AWS Connector Quick Start into new VPC. **WARNING** You will be billed for the AWS resources used if you create a stack from this template.",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "AWS Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix",
                        "QSDeploymentSuffix"
                    ]
                },
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "RemoteAccessCIDR",
                        "VPCDefinition",
                        "AvailabilityZones",
                        "KeyName"
                    ]
                },
                {
                    "Label": {
                        "default": "OSIsoft Authentication Configuration"
                    },
                    "Parameters": [
                        "AuthType"
                    ]
                },
                {
                    "Label": {
                        "default": "Windows Integrated Security Specific Authentication Configuration"
                    },
                    "Parameters": [
                        "VPNAddress",
                        "VPNUser",
                        "VPNPassword",
                        "VPNFQDN",
                        "WISUser",
                        "WISPassword"
                    ]
                },
                {
                    "Label": {
                        "default": "Explicit user and password Specific Authentication Configuration"
                    },
                    "Parameters": [
                        "PIUser",
                        "PIPassword",
                        "AFDomainName",
                        "AFUser",
                        "AFPassword"
                    ]
                },
                {
                    "Label": {
                        "default": "PI Data Archive Server Configuration"
                    },
                    "Parameters": [
                        "PIServerIP",
                        "PIPort"
                    ]
                },
                {
                    "Label": {
                        "default": "Asset Framework Server Configuration"
                    },
                    "Parameters": [
                        "AFServerIP",
                        "AFPort",
                        "AfStructureDatabase"
                    ]
                },
                {
                    "Label": {
                        "default": "Connector Agent Configuration"
                    },
                    "Parameters": [
                        "QSS3ConnectorBucketName",
                        "QSS3ConnectorKeyPrefix",
                        "ConnectorInstanceType",
                        "LogGroupNamePrefix",
                        "MetricNamespaceNamePrefix"
                    ]
                },
                {
                    "Label": {
                        "default": "Management Console Configuration"
                    },
                    "Parameters": [
                        "InstanceType",
                        "ApplicationUser",
                        "ApplicationPassword"
                    ]
                },
                {
                    "Label": {
                        "default": "Connector Supporting Infrastructure Configuration"
                    },
                    "Parameters": [
                        "WorkerInstanceType",
                        "ReadCapacity",
                        "WriteCapacity",
                        "KinesisStreamsShardsCount"
                    ]
                },
                {
                    "Label": {
                        "default": "Elasticsearch Configuration"
                    },
                    "Parameters": [
                        "MaxIndexAge",
                        "ElasticsearchNodeCount",
                        "ElasticsearchNodeType"
                    ]
                },
                {
                    "Label": {
                        "default": "S3 Lifecycle Management"
                    },
                    "Parameters": [
                        "EnableS3LifecycleRules",
                        "IATransitionPeriodInDays",
                        "GlacierTransitionPeriodInDays"
                    ]
                }
            ],
            "ParameterLabels": {
                "QSDeploymentSuffix": {
                    "default": "Quick Start Deployment Suffix"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 Bucket Name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 Key Prefix"
                },
                "RemoteAccessCIDR": {
                    "default": "Remote Access CIDR"
                },
                "VPCDefinition": {
                    "default": "VPC Definition"
                },
                "AvailabilityZones": {
                    "default": "Availability Zones"
                },
                "KeyName": {
                    "default": "Key Name"
                },
                "AFDomainName": {
                    "default": "Asset Framework Domain Name"
                },
                "AFPassword": {
                    "default": "Asset Framework Password"
                },
                "AFPort": {
                    "default": "Asset Framework Port"
                },
                "AfStructureDatabase": {
                    "default": "Asset Framework Structure Database"
                },
                "AFUser": {
                    "default": "Asset Framework User"
                },
                "AFServerIP": {
                    "default": "Asset Framework Server IP"
                },
                "PIServerIP": {
                    "default": "PI Server IP"
                },
                "PIUser": {
                    "default": "PI User"
                },
                "PIPassword": {
                    "default": "PI Password"
                },
                "PIPort": {
                    "default": "PI Port"
                },
                "ConnectorInstanceType": {
                    "default": "Connector Agent Instance Type"
                },
                "QSS3ConnectorBucketName": {
                    "default": "Connector Agent Binaries Bucket Name"
                },
                "QSS3ConnectorKeyPrefix": {
                    "default": "Connector Agent Binaries Key Prefix"
                },
                "LogGroupNamePrefix": {
                    "default": "Log Group Name Prefix"
                },
                "MetricNamespaceNamePrefix": {
                    "default": "Metric Namespace Name Prefix"
                },
                "WorkerInstanceType": {
                    "default": "Communication Worker Instance Type"
                },
                "InstanceType": {
                    "default": "Management Console Instance Type"
                },
                "ApplicationUser": {
                    "default": "Management Console User Name"
                },
                "ApplicationPassword": {
                    "default": "Management Console Password"
                },
                "MaxIndexAge": {
                    "default": "Days to Live"
                },
                "ElasticsearchNodeCount": {
                    "default": "Elasticsearch Node Count"
                },
                "ElasticsearchNodeType": {
                    "default": "Elasticsearch Node Type"
                },
                "ReadCapacity": {
                    "default": "DynamoDB Read Capacity"
                },
                "WriteCapacity": {
                    "default": "DynamoDB Write Capacity"
                },
                "EnableS3LifecycleRules": {
                    "default": "Enable S3 Lifecycle"
                },
                "IATransitionPeriodInDays": {
                    "default": "IA Transition Period"
                },
                "GlacierTransitionPeriodInDays": {
                    "default": "Glacier Transition Period"
                },
                "AuthType": {
                    "default": "Authentication Method"
                },
                "VPNAddress": {
                    "default": "VPN Server Address"
                },
                "VPNUser": {
                    "default": "VPN User Name"
                },
                "VPNPassword": {
                    "default": "VPN Password"
                },
                "VPNFQDN": {
                    "default": "VPN Domain Name"
                },
                "WISUser": {
                    "default": "VPN Domain User Name"
                },
                "WISPassword": {
                    "default": "VPN Domain User Password"
                },
                "KinesisStreamsShardsCount": {
                    "default": "Kinesis Streams Shards Count"
                }
            }
        }
    },
    "Parameters": {
        "QSS3BucketName": {
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Description": "S3 bucket where the templates and scripts are installed. Use this parameter to specify the S3 bucket name you've created for your copy of Quick Start assets, if you decide to customize or extend the Quick Start for your own use. The bucket name can include numbers, lowercase letters, uppercase letters, and hyphens, but should not start or end with a hyphen.",
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "Type": "String",
            "Default": "quickstart-reference"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-][0-9a-zA-Z-/]*/$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Type": "String",
            "Default": "osisoft/latest/"
        },
        "RemoteAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Description": "The CIDR IP range that is permitted to SSH into the bastion host instance and access Amazon ES. We recommend that you set this value to a trusted IP range. For example, you might want to grant only your corporate network access to the software. You can use http://checkip.amazonaws.com/ to check your IP address. This parameter must be in the form x.x.x.x/x (e.g., 96.127.8.12/32, YOUR_IP/32).",
            "Type": "String"
        },
        "InstanceType": {
            "Description": "Management Console EC2 instance type",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m5.large",
                "m5.xlarge",
                "m5.2xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "ConnectorInstanceType": {
            "Description": "Connector Agent EC2 instance type.",
            "Type": "String",
            "Default": "m4.xlarge",
            "AllowedValues": [
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "m5.large",
                "m5.xlarge",
                "m5.2xlarge",
                "m5.4xlarge",
                "m5.12xlarge",
                "c5.large",
                "c5.xlarge",
                "c5.2xlarge",
                "c5.4xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "WorkerInstanceType": {
            "Description": "Communication worker EC2 instance type. Communication worker processes messages coming from Connector Agent.",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m5.large",
                "m5.xlarge",
                "m5.2xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "Can contain only ASCII characters."
        },
        "VPCDefinition": {
            "Default": "QuickstartDefault",
            "Description": "VPC Definition name from Map maintained in this Quick Start's master template.  You can support multiple VPC Definitions by extending this Map and choosing the appropriate name.  If you do not need to change the VPC Definition, simply choose the default.",
            "Type": "String"
        },
        "AvailabilityZones": {
            "Description": "The list of Availability Zones to use for the subnets in the VPC. You must specify two Availability Zones. By default, the Quick Start preserves the logical order you specify.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "ApplicationUser": {
            "AllowedPattern": "^[\\x00-\\x7F]*$",
            "ConstraintDescription": "User name must contain 1 to 64 ASCII characters.",
            "Default": "ConsoleAdmin",
            "Description": "The user name for the Management Console. Consisting of 1-64 ASCII characters.",
            "MaxLength": "64",
            "MinLength": "1",
            "Type": "String"
        },
        "ApplicationPassword": {
            "Description": "Password for Management Console User. Password must contain 8 to 64 printable ASCII characters excluding: /, \", ', \\ and @. It must contain 1 uppercase letter, 1 lowercase letter, and 1 number.",
            "Type": "String",
            "NoEcho": "true",
            "AllowedPattern": "^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])[A-Za-z0-9!#$%&()*+,.:;<=>?\\[\\]^_`{|}~-]*$",
            "MinLength": 8,
            "MaxLength": 64
        },
        "ReadCapacity": {
            "Description": "Read capacity of each table.",
            "Type": "Number",
            "Default": 1,
            "MinValue": 1,
            "MaxValue": 10000,
            "ConstraintDescription": "Must be between 1 and 10000"
        },
        "WriteCapacity": {
            "Description": "Write capacity of each table.",
            "Type": "Number",
            "Default": 1,
            "MinValue": 1,
            "MaxValue": 10000,
            "ConstraintDescription": "Must be between 1 and 10000"
        },
        "ElasticsearchNodeType": {
            "Description": "The node type to be provisioned for the Elasticsearch cluster.",
            "Type": "String",
            "Default": "t2.small.elasticsearch",
            "AllowedValues": [
                "t2.small.elasticsearch",
                "m4.large.elasticsearch",
                "m4.xlarge.elasticsearch",
                "c4.large.elasticsearch",
                "c4.xlarge.elasticsearch",
                "r4.large.elasticsearch",
                "r4.xlarge.elasticsearch"
            ],
            "ConstraintDescription": "must be a valid Elasticsearch node type."
        },
        "ElasticsearchNodeCount": {
            "Description": "The number of nodes in the Elasticsearch cluster.",
            "Type": "Number",
            "Default": "1"
        },
        "AfStructureDatabase": {
            "Description": "Name of Asset Framework Database to which Connector Agent will connect, for example \"NuGreen\". Required only if you adopted Asset Framework Server in your OSIsoft system. This Quick Start can independently connect to PI Data Archive and Asset Framework Server.",
            "Type": "String"
        },
        "LogGroupNamePrefix": {
            "Description": "Name of CloudWatch log group for metric filters",
            "Type": "String",
            "Default": "ConnectorLogGroup"
        },
        "MetricNamespaceNamePrefix": {
            "Description": "Namespace name for the metric filters",
            "Type": "String",
            "Default": "ConnectorMetricNamespace"
        },
        "PIServerIP": {
            "Description": "Host (IP) of the PI Data Archive Server.",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "Type": "String"
        },
        "PIPort": {
            "Description": "Port on which PI Data Archive runs.",
            "Type": "Number",
            "Default": 5450
        },
        "AFServerIP": {
            "Description": "Host (IP) of the PI Asset Framework Server. Required only if you adopted Asset Framework Server in your OSIsoft system. This Quick Start can independently connect to PI Data Archive and Asset Framework Server.",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "Type": "String"
        },
        "AFPort": {
            "Description": "Port on which PI AF Server runs. Required only if you adopted Asset Framework Server in your OSIsoft system. This Quick Start can independently connect to PI Data Archive and Asset Framework Server.",
            "Type": "Number",
            "Default": 5457
        },
        "AFUser": {
            "Description": "Name of the user with privileges to access PI Asset Framework Server. Required only if Authentication Method is set to \"Explicit user and password\" and if you adopted Asset Framework Server in your OSIsoft system. This Quick Start can independently connect to PI Data Archive and Asset Framework Server.",
            "Type": "String"
        },
        "AFPassword": {
            "Description": "Password of the user with privileges to access PI Asset Framework Server. Required only if Authentication Method is set to \"Explicit user and password\" and if you adopted Asset Framework Server in your OSIsoft system. This Quick Start can independently connect to PI Data Archive and Asset Framework Server.",
            "NoEcho": "true",
            "Type": "String"
        },
        "AFDomainName": {
            "Description": "Domain name of the user that runs AF Server. Required only if Authentication Method is set to \"Explicit user and password\" and if you adopted Asset Framework Server in your OSIsoft system. This Quick Start can independently connect to PI Data Archive and Asset Framework Server.",
            "Type": "String"
        },
        "PIUser": {
            "Type": "String",
            "Description": "Name of the PI Data Archive user. Required only if Authentication Method is set to \"Explicit user and password\"."
        },
        "PIPassword": {
            "Description": "Password for the PI Data Archive user. Required only if Authentication Method is set to \"Explicit user and password\".",
            "Type": "String",
            "NoEcho": "true"
        },
        "QSS3ConnectorKeyPrefix": {
            "Type": "String",
            "Description": "The S3 key name prefix used to simulate a folder for your Connector Agent binary, if you decide to customize or extend the Connector Agent for your own use. This prefix can include numbers, lowercase letters, uppercase letters, hyphens, and forward slashes",
            "Default": "osisoft/47lining/v1/",
            "AllowedPattern": "^[0-9a-zA-Z-][0-9a-zA-Z-/]*/$",
            "ConstraintDescription": "Connector Agent key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start with forward slash (/) because it is automatically appended."
        },
        "QSS3ConnectorBucketName": {
            "Type": "String",
            "Description": "Name of your S3 bucket with your Connector Agent binary. You can build your own binary or use pre-built binary of Connector Agent.",
            "Default": "pi2aws-repository",
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Bucket name and key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start with forward slash (/) because it is automatically appended."
        },
        "QSDeploymentSuffix": {
            "Type": "String",
            "Default": "qs",
            "ConstraintDescription": "Deployment suffix can include numbers, lowercase letters and should have the maximum length of 7 characters.",
            "Description": "You can deploy this Quick Start multiple times in the same region if you provide a different suffix that is added to resource names to make them unique per each deployment. Use this parameter to support deployment of production and test environments in the same region in the same AWS account.",
            "AllowedPattern": "[a-z0-9]+",
            "MinLength": 1,
            "MaxLength": 7
        },
        "MaxIndexAge": {
            "Type": "Number",
            "Default": 7,
            "Description": "Number of days after which Managed Feeds are removed from Elasticsearch. Managed Feeds are kept in Elasticsearch up to number of days specified. Data is permanently stored in S3."
        },
        "EnableS3LifecycleRules": {
            "Description": "Enable S3 lifecycle rules",
            "Type": "String",
            "AllowedValues": ["yes", "no"],
            "Default": "yes"
        },
        "IATransitionPeriodInDays": {
            "Description": "Number of days after which data is transitioned to IA.",
            "Type": "Number",
            "Default": 90
        },
        "GlacierTransitionPeriodInDays": {
            "Description": "Number of days after which data is transitioned to Glacier.",
            "Type": "Number",
            "Default": 365
        },
        "VPNAddress": {
            "Type": "String",
            "Description": "Address of existing VPN server that provides network access between your AWS resources and PI Data Archive. Required only if Authentication Method is set to \"WIS\".",
            "Default": ""
        },
        "VPNUser": {
            "Type": "String",
            "Description": "Username for the existing VPN user. Required only if Authentication Method is set to \"WIS\".",
            "Default": ""
        },
        "VPNPassword": {
            "Type": "String",
            "Description": "Password for the existing VPN user. Required only if Authentication Method is set to \"WIS\".",
            "NoEcho": "true",
            "Default": ""
        },
        "VPNFQDN": {
            "Description": "Fully qualified domain name (FQDN) of the forest domain for VPN and OSIsoft system e.g. \"osisoft-example.com\". Required only if Authentication Method is set to \"WIS\".",
            "Type": "String",
            "Default": ""
        },
        "AuthType": {
            "Type": "String",
            "AllowedValues": ["WIS", "Explicit user and password"],
            "Default": "WIS",
            "Description": "The authentication method to use between Connector Agent and OSIsoft system. Two authentication methods are supported: Windows Integrated Security (WIS) and Explicit user and password authentication. If you are using Active Directory with your OSIsoft system and already have VPN established then you can use WIS authentication method for Connector Agent. If you don't use WIS, then you can specify Explicit user and password authentication."
        },
        "WISUser": {
            "Type": "String",
            "Default": "",
            "Description": "The name of user in Active Directory in your Windows network with privileges to access PI Data Archive and Asset Framework Server. Required only if Authentication Method is set to \"WIS\"."
        },
        "WISPassword": {
            "Type": "String",
            "NoEcho": "true",
            "Default": "",
            "Description": "The password of user in Active Directory in your Windows network with privileges to access PI Data Archive and Asset Framework Server. Required only if Authentication Method is set to \"WIS\"."
        },
        "KinesisStreamsShardsCount": {
            "Type": "Number",
            "Description": "The number of Kinesis Streams shards to provision for PI Data Kinesis Stream. For guidance, see the Amazon Kinesis Streams documentation.",
            "Default": 2,
            "MinValue": 1
        }
    },
    "Mappings": {
        "VPCDefinitions": {
            "QuickstartDefault": {
                "VPCCIDR": "10.0.0.0/16",
                "PublicSubnet1CIDR": "10.0.128.0/20",
                "PrivateSubnet1CIDR": "10.0.0.0/19",
                "PublicSubnet2CIDR": "10.0.144.0/20",
                "PrivateSubnet2CIDR": "10.0.32.0/19",
                "NumberOfAZs": "2"
            }
        }
    },
    "Resources": {
        "Pi2AwsFoundationStack": {
            "DependsOn": [
                "VPCStack"
            ],
            "Properties": {
                "Parameters": {
                    "QSDeploymentSuffix": {
                        "Ref": "QSDeploymentSuffix"
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "RemoteAccessCIDR": {
                        "Ref": "RemoteAccessCIDR"
                    },
                    "InstanceType": {
                        "Ref": "InstanceType"
                    },
                    "ConnectorInstanceType": {
                        "Ref": "ConnectorInstanceType"
                    },
                    "WorkerInstanceType": {
                        "Ref": "WorkerInstanceType"
                    },
                    "KeyName": {
                        "Ref": "KeyName"
                    },
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "ApplicationUser": {
                        "Ref": "ApplicationUser"
                    },
                    "ApplicationPassword": {
                        "Ref": "ApplicationPassword"
                    },
                    "ReadCapacity": {
                        "Ref": "ReadCapacity"
                    },
                    "WriteCapacity": {
                        "Ref": "WriteCapacity"
                    },
                    "ElasticsearchNodeType": {
                        "Ref": "ElasticsearchNodeType"
                    },
                    "ElasticsearchNodeCount": {
                        "Ref": "ElasticsearchNodeCount"
                    },
                    "AfStructureDatabase": {
                        "Ref": "AfStructureDatabase"
                    },
                    "LogGroupNamePrefix": {
                        "Ref": "LogGroupNamePrefix"
                    },
                    "MetricNamespaceNamePrefix": {
                        "Ref": "MetricNamespaceNamePrefix"
                    },
                    "PrivateSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet1AID"
                        ]
                    },
                    "PrivateSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet2AID"
                        ]
                    },
                    "PublicSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet1ID"
                        ]
                    },
                    "PublicSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet2ID"
                        ]
                    },
                    "VPCCIDR": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCCIDR"
                        ]
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "PIServerIP": {
                        "Ref": "PIServerIP"
                    },
                    "AFUser": {
                        "Ref": "AFUser"
                    },
                    "PIPort": {
                        "Ref": "PIPort"
                    },
                    "AFServerIP": {
                        "Ref": "AFServerIP"
                    },
                    "AFPort": {
                        "Ref": "AFPort"
                    },
                    "AFPassword": {
                        "Ref": "AFPassword"
                    },
                    "AFDomainName": {
                        "Ref": "AFDomainName"
                    },
                    "PIUser": {
                        "Ref": "PIUser"
                    },
                    "PIPassword": {
                        "Ref": "PIPassword"
                    },
                    "QSS3ConnectorKeyPrefix": {
                        "Ref": "QSS3ConnectorKeyPrefix"
                    },
                    "QSS3ConnectorBucketName": {
                        "Ref": "QSS3ConnectorBucketName"
                    },
                    "MaxIndexAge": {
                        "Ref": "MaxIndexAge"
                    },
                    "EnableS3LifecycleRules": {
                        "Ref": "EnableS3LifecycleRules"
                    },
                    "IATransitionPeriodInDays": {
                        "Ref": "IATransitionPeriodInDays"
                    },
                    "GlacierTransitionPeriodInDays": {
                        "Ref": "GlacierTransitionPeriodInDays"
                    },
                    "AuthType": {
                        "Ref": "AuthType"
                    },
                    "WISUser": {
                        "Ref": "WISUser"
                    },
                    "WISPassword": {
                        "Ref": "WISPassword"
                    },
                    "VPNAddress": {
                        "Ref": "VPNAddress"
                    },
                    "VPNUser": {
                        "Ref": "VPNUser"
                    },
                    "VPNPassword": {
                        "Ref": "VPNPassword"
                    },
                    "VPNFQDN": {
                        "Ref": "VPNFQDN"
                    },
                    "KinesisStreamsShardsCount": {
                        "Ref": "KinesisStreamsShardsCount"
                    }
                },
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/pi2aws.template"
                }
            },
            "Type": "AWS::CloudFormation::Stack"
        },
        "BastionStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-linux-bastion/templates/linux-bastion.template"
                },
                "Parameters": {
                    "KeyPairName": {
                        "Ref": "KeyName"
                    },
                    "PublicSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet1ID"
                        ]
                    },
                    "PublicSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet2ID"
                        ]
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Fn::Sub": [
                            "${Prefix}submodules/quickstart-linux-bastion/",
                            {
                                "Prefix": {
                                    "Ref": "QSS3KeyPrefix"
                                }
                            }
                        ]
                    },
                    "RemoteAccessCIDR": {
                        "Ref": "RemoteAccessCIDR"
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "EnableTCPForwarding": "true"
                }
            }
        },
        "VPCStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template"
                },
                "Parameters": {
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "KeyPairName": {
                        "Ref": "KeyName"
                    },
                    "NumberOfAZs": {
                        "Fn::FindInMap": [
                            "VPCDefinitions",
                            {
                                "Ref": "VPCDefinition"
                            },
                            "NumberOfAZs"
                        ]
                    },
                    "PrivateSubnet1ACIDR": {
                        "Fn::FindInMap": [
                            "VPCDefinitions",
                            {
                                "Ref": "VPCDefinition"
                            },
                            "PrivateSubnet1CIDR"
                        ]
                    },
                    "PrivateSubnet2ACIDR": {
                        "Fn::FindInMap": [
                            "VPCDefinitions",
                            {
                                "Ref": "VPCDefinition"
                            },
                            "PrivateSubnet2CIDR"
                        ]
                    },
                    "PublicSubnet1CIDR": {
                        "Fn::FindInMap": [
                            "VPCDefinitions",
                            {
                                "Ref": "VPCDefinition"
                            },
                            "PublicSubnet1CIDR"
                        ]
                    },
                    "PublicSubnet2CIDR": {
                        "Fn::FindInMap": [
                            "VPCDefinitions",
                            {
                                "Ref": "VPCDefinition"
                            },
                            "PublicSubnet2CIDR"
                        ]
                    },
                    "VPCCIDR": {
                        "Fn::FindInMap": [
                            "VPCDefinitions",
                            {
                                "Ref": "VPCDefinition"
                            },
                            "VPCCIDR"
                        ]
                    }
                }
            }
        }
    },
    "Outputs": {
        "ManagementConsoleURL": {
            "Value": {
                "Fn::GetAtt": [
                    "Pi2AwsFoundationStack",
                    "Outputs.ManagementConsoleURL"
                ]
            },
            "Description": "Management Console URL"
        },
        "ElasticsearchEndpoint": {
             "Value": {
                "Fn::GetAtt": [
                    "Pi2AwsFoundationStack",
                    "Outputs.ElasticsearchEndpoint"
                ]
            },
            "Description": "Elasticsearch domain endpoint"
        },
        "CuratedBucketName": {
            "Value": {
                "Fn::GetAtt": [
                    "Pi2AwsFoundationStack",
                    "Outputs.CuratedBucketName"
                ]
            },
            "Description": "Bucket name for Curated Datasets"
        },
        "PublishedBucketName": {
            "Value": {
                "Fn::GetAtt": [
                    "Pi2AwsFoundationStack",
                    "Outputs.PublishedBucketName"
                ]
            },
            "Description": "Bucket name for Published Data"
        },
        "SubmissionsBucketName": {
            "Value": {
                "Fn::GetAtt": [
                    "Pi2AwsFoundationStack",
                    "Outputs.SubmissionsBucketName"
                ]
            },
            "Description": "Bucket name for submissions"
        },
        "KinesisStreamName": {
            "Value": {
                "Fn::GetAtt": [
                    "Pi2AwsFoundationStack",
                    "Outputs.KinesisStreamName"
                ]
            },
            "Description": "Kinesis PI Points data stream name"
        }
    }
}
