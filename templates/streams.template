{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "**WARNING** This template creates an Amazon Kinesis Streams, Kinesis Firehose and Kinesis Analytics applications. You will be billed for the AWS resources used if you create a stack from this template.",
    "Parameters": {
        "QSS3BucketName": {
            "Description": "S3 bucket name for the repository. Repository bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "Description": "S3 key prefix for the repository. Repository key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
            "Type": "String"
        },
        "QSDeploymentSuffix": {
            "Type": "String"
        },
        "ElasticsearchEndpoint": {
            "Type": "String"
        },
        "ElasticsearchDomainARN" : {
            "Type": "String"
        },
        "ElasticsearchAccessRoleARN" : {
            "Type" : "String"
        },
        "StreamsAccessRoleARN": {
            "Type": "String"
        },
        "KinesisAnalyticsLambdaRoleARN": {
            "Type": "String"
        },
        "FirehoseDataBucketName": {
            "Type": "String"
        },
        "RegionalLambdaBucketName": {
            "Type": "String"
        },
        "ElasticsearchStreamDataBucketARN": {
            "Type": "String"
        },
        "ElasticsearchBucketRoleARN": {
            "Type": "String"
        },
        "ManagedFeedsBucketRoleARN": {
            "Type": "String"
        },
        "RegisterKibanaDashboardRoleARN": {
            "Type": "String"
        }
    },
    "Resources": {
        "InputStream": {
            "Type": "AWS::Kinesis::Stream",
            "Properties": {
                "RetentionPeriodHours": 24,
                "ShardCount": 2
            }
        },
        "ElasticsearchOutputStream": {
            "Type": "AWS::KinesisFirehose::DeliveryStream",
            "Properties": {
                "ElasticsearchDestinationConfiguration": {
                    "BufferingHints": {
                        "IntervalInSeconds": 60,
                        "SizeInMBs": 50
                    },
                    "DomainARN": {
                        "Ref": "ElasticsearchDomainARN"
                    },
                    "IndexName": "managed_feeds",
                    "IndexRotationPeriod": "OneDay",
                    "TypeName": "ManagedFeedStream",
                    "RetryOptions": {
                        "DurationInSeconds": "60"
                    },
                    "RoleARN": {
                        "Ref": "ElasticsearchAccessRoleARN"
                    },
                    "S3BackupMode": "AllDocuments",
                    "S3Configuration": {
                        "BucketARN": {
                            "Ref": "ElasticsearchStreamDataBucketARN"
                        },
                        "BufferingHints": {
                            "IntervalInSeconds": "60",
                            "SizeInMBs": "50"
                        },
                        "CompressionFormat": "UNCOMPRESSED",
                        "Prefix": "data/",
                        "RoleARN": {
                            "Ref": "ElasticsearchBucketRoleARN"
                        }
                    }
                }
            }
        },
        "UpdatesPerSecondOutputStream": {
            "Type": "AWS::KinesisFirehose::DeliveryStream",
            "Properties": {
                "ElasticsearchDestinationConfiguration": {
                    "BufferingHints": {
                        "IntervalInSeconds": 60,
                        "SizeInMBs": 50
                    },
                    "DomainARN": {
                        "Ref": "ElasticsearchDomainARN"
                    },
                    "IndexName": "updates_per_second",
                    "IndexRotationPeriod": "NoRotation",
                    "TypeName": "UpdatesPerSecond",
                    "RetryOptions": {
                        "DurationInSeconds": "60"
                    },
                    "RoleARN": {
                        "Ref": "ElasticsearchAccessRoleARN"
                    },
                    "S3BackupMode": "AllDocuments",
                    "S3Configuration": {
                        "BucketARN": {
                            "Ref": "ElasticsearchStreamDataBucketARN"
                        },
                        "BufferingHints": {
                            "IntervalInSeconds": "60",
                            "SizeInMBs": "50"
                        },
                        "CompressionFormat": "UNCOMPRESSED",
                        "Prefix": "updates_per_second/",
                        "RoleARN": {
                            "Ref": "ElasticsearchBucketRoleARN"
                        }
                    }
                }
            }
        },
        "UpdatesPerManagedFeedOutputStream": {
            "Type": "AWS::KinesisFirehose::DeliveryStream",
            "Properties": {
                "ElasticsearchDestinationConfiguration": {
                    "BufferingHints": {
                        "IntervalInSeconds": 60,
                        "SizeInMBs": 50
                    },
                    "DomainARN": {
                        "Ref": "ElasticsearchDomainARN"
                    },
                    "IndexName": "updates_per_managed_feed",
                    "IndexRotationPeriod": "NoRotation",
                    "TypeName": "UpdatesPerManagedFeed",
                    "RetryOptions": {
                        "DurationInSeconds": "60"
                    },
                    "RoleARN": {
                        "Ref": "ElasticsearchAccessRoleARN"
                    },
                    "S3BackupMode": "AllDocuments",
                    "S3Configuration": {
                        "BucketARN": {
                            "Ref": "ElasticsearchStreamDataBucketARN"
                        },
                        "BufferingHints": {
                            "IntervalInSeconds": "60",
                            "SizeInMBs": "50"
                        },
                        "CompressionFormat": "UNCOMPRESSED",
                        "Prefix": "updates_per_managed_feed/",
                        "RoleARN": {
                            "Ref": "ElasticsearchBucketRoleARN"
                        }
                    }
                }
            }
        },
        "S3OutputStream": {
            "Type": "AWS::KinesisFirehose::DeliveryStream",
            "Properties": {
                "S3DestinationConfiguration": {
                    "BucketARN": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:s3:::",
                                {
                                    "Ref": "FirehoseDataBucketName"
                                }
                            ]
                        ]
                    },
                    "BufferingHints": {
                        "IntervalInSeconds": 60,
                        "SizeInMBs": 60
                    },
                    "CompressionFormat": "UNCOMPRESSED",
                    "Prefix": "data/",
                    "RoleARN": {
                        "Ref": "ManagedFeedsBucketRoleARN"
                    }
                }
            }
        },
        "KinesisAnalyticsLambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "RegionalLambdaBucketName"
                    },
                    "S3Key": "lambda_deployment_package.zip"
                },
                "Description": "Create Kinesis Analytics applications",
                "Environment": {
                    "Variables": {
                        "INPUT_STREAM_ARN": {
                            "Fn::GetAtt": [
                                "InputStream",
                                "Arn"
                            ]
                        },
                        "OUTPUT_ES_STREAM_ARN": {
                            "Fn::Join": [
                                ":",
                                [
                                    "arn:aws:firehose",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    {
                                        "Ref": "AWS::AccountId"
                                    },
                                    {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "deliverystream/",
                                                {
                                                    "Ref": "ElasticsearchOutputStream"
                                                }
                                            ]
                                        ]
                                    }
                                ]
                            ]
                        },
                        "OUTPUT_S3_STREAM_ARN": {
                            "Fn::Join": [
                                ":",
                                [
                                    "arn:aws:firehose",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    {
                                        "Ref": "AWS::AccountId"
                                    },
                                    {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "deliverystream/",
                                                {
                                                    "Ref": "S3OutputStream"
                                                }
                                            ]
                                        ]
                                    }
                                ]
                            ]
                        },
                        "OUTPUT_UPDATES_PER_SECOND_STREAM_ARN": {
                            "Fn::Join": [
                                ":",
                                [
                                    "arn:aws:firehose",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    {
                                        "Ref": "AWS::AccountId"
                                    },
                                    {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "deliverystream/",
                                                {
                                                    "Ref": "UpdatesPerSecondOutputStream"
                                                }
                                            ]
                                        ]
                                    }
                                ]
                            ]
                        },
                        "OUTPUT_UPDATES_PER_MANAGED_FEED_ARN": {
                            "Fn::Join": [
                                ":",
                                [
                                    "arn:aws:firehose",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    {
                                        "Ref": "AWS::AccountId"
                                    },
                                    {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "deliverystream/",
                                                {
                                                    "Ref": "UpdatesPerManagedFeedOutputStream"
                                                }
                                            ]
                                        ]
                                    }
                                ]
                            ]
                        },
                        "ROLE_ARN": {
                            "Ref": "StreamsAccessRoleARN"
                        },
                        "DEPLOYMENT_SUFFIX": {
                            "Ref": "QSDeploymentSuffix"
                        }
                    }
                },
                "Handler": "lambdas.create_kinesis_app_lambda.lambda_handler",
                "Role": {
                    "Ref": "KinesisAnalyticsLambdaRoleARN"
                },
                "Runtime": "python3.6",
                "Timeout": 30
            }
        },
        "CreateKinesisAnalytics": {
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "KinesisAnalyticsLambda",
                        "Arn"
                    ]
                }
            },
            "Type": "Custom::CreateKinesisAnalytics"
        },
        "RegisterKibanaDashboardLambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "RegionalLambdaBucketName"
                    },
                    "S3Key": "lambda_deployment_package.zip"
                },
                "Description": "Register dashboard in Kibana",
                "Environment": {
                    "Variables": {
                        "ELASTICSEARCH_ENDPOINT": {
                            "Ref": "ElasticsearchEndpoint"
                        },
                        "QSS3_BUCKET_NAME": {
                            "Ref": "QSS3BucketName"
                        },
                        "QSS3_KEY_PREFIX": {
                            "Ref": "QSS3KeyPrefix"
                        }
                    }
                },
                "Handler": "lambdas.setup_elasticsearch_and_kibana.lambda_handler",
                "Role": {
                    "Ref": "RegisterKibanaDashboardRoleARN"
                },
                "Runtime": "python3.6",
                "Timeout": 30
            }
        },
        "RegisterKibanaDashboard": {
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "RegisterKibanaDashboardLambda",
                        "Arn"
                    ]
                }
            },
            "Type": "Custom::RegisterDashboard"
        }
    },
    "Outputs": {
        "KinesisStreamName": {
            "Value": {
                "Ref": "InputStream"
            }
        }
    }
}
